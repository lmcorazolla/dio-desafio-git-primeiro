	CONCEITUAÇÃO E CRIAÇÃO

"Um espaço na memória do computador, onde se pode guardar valores."

Existem 4 tipos:
- Instância: objeto
- Classe: classe
- Local: dentro de métodos
- Parâmetro: Na assinatura do método

Padrão de Definição:
<?visibilidade?> <?modificador?> tipo nome <?=valor inicial?>
V: "public", "protected", e "private"
M: "static" e "final"
T: tipo de dado
N: nome que é fornecido a variavel
VI: um valor inicial, caso se deseje

Convenções e regras:
- Não devem começar com números;
- Embora permitido, "$" e "_" devem ser evitados;
- São case-sensitive;
- Sem espaços;
- Não pode ser palavra reservada do Java;

Boas práticas:
- Sempre começar com minúscula;
- Nomes expressivos;
- Notação camelo;
- Quando constante (final) toda maiúscula e separada por "_";


	TIPOS DE DADOS
	
"São os valores e consequentemente operações que as variáveis podem assumir e sofrer, respectivamnte."

Tipificação:
- Estática(forte) X Dinâmica(fraco)

- Primitivo X Composto

Opções de tipos:
- Textual
- Numeral
- Lógico
- Objeto

Boas práticas:
Usar de forma adequada cada tipo de dado para cada informação

	OPERADORES ARITMÉTICOS
	
"São símbolos especiais que são capazes de realizar ações específicas em um, dois ou mais operandos e retornar um resultado."

Tipos:
- pós fixado: exp++ ou exp--
	somar ou diminuir uma unidade
	
- prefixado: ++exp ou --exp
	primeiro soma ou diminui para então operar a instrução
	
- aritmético: +, -, *, / e %
	% (mod) é o que sobra da divisão

- atribuição: =, +=, -=, *=, /= e %=

Exemplos:
- int i = ++k; -> i = k+1;
- int j = k--; -> j = k; k= k-1
- float f = 1.5f + 4.5f;
- double d = f
- int m = 5 % 2; -> m = 1;
- i += 5; -> i = i + 5;
- j-= 3; -> j = j - 3;
- l *= 3; -> l = l * 3;
- k %= 2; -> k = k % 2;



	CONVERSÕES (CASTING)

"É a transformação de uma determinada variável de tipo menos específico para um tipo mais específico ou vice-versa."
Tipos:

- Upcast (implícito)
- Downcast (explítico)

Exemplos:
long l; int i = 10; l = i;
int i; long l = 100; i = (int) l;
double d; float f = 10.5f; d = f;
float f; double d = 10.5d; f = (float)d;
int t; float f = 10.5f; i = (int) f; atenção que isso descarta após o .



	










